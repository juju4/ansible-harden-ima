---

- name: Ensure EVM packages are present
  ansible.builtin.package:
    name:
      - ima-evm-utils
      - attr
      - keyutils
    state: present

- name: Create /etc/keys
  ansible.builtin.file:
    path: /etc/keys
    state: directory
    mode: '0755'

- name: Create a kernel master key to protect the EVM key  # noqa no-free-form
  ansible.builtin.shell: keyctl add user kmk "$(dd if=/dev/urandom bs=1 count=32 2> /dev/null)" @u
  args:
    creates: /etc/keys/kmk

- name: Workaround - systemd#5522
  ansible.builtin.command: keyctl link @u @s
  when: harden_ima_systemd_workaround

- name: Export the kmk key into a file
  ansible.builtin.shell: keyctl pipe `keyctl search @u user kmk` > /etc/keys/kmk
  args:
    creates: /etc/keys/kmk

- name: Create an encrypted EVM key based on the kmk key
  ansible.builtin.command: keyctl add encrypted evm-key "new user:kmk 64" @u
  args:
    creates: /etc/keys/evm-key

- name: Export the evm-key user key into a file
  ansible.builtin.shell: keyctl pipe `keyctl search @u encrypted evm-key` > /etc/keys/evm-key
  args:
    creates: /etc/keys/evm-key

- name: Not container
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )
    and ansible_os_family != 'RedHat'
  block:
    - name: Get EVM state from securityfs
      ansible.builtin.slurp:
        src: /sys/kernel/security/evm
      register: sysevm

    - name: Enable EVM
      ansible.builtin.shell: echo 1 > /sys/kernel/security/evm
      when: sysevm['content'] | b64decode | int == 0
