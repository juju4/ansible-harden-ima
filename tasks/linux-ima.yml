---

- name: Check securityfs is present
  ansible.builtin.stat:
    path: /sys/kernel/security/integrity/ima
  register: securityfs

- name: Warning
  ansible.builtin.debug: msg="Warning! securityfs not present."
  when: not securityfs.stat.exists

- name: Check IMA/EVM present in dmesg
  ansible.builtin.shell: |
    set -o pipefail
    dmesg | grep -i -E '(evm|ima):' | wc -l
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false
  register: dmesg

- name: Warning2
  ansible.builtin.debug: msg="Warning! IMA/EVM not present in dmesg."
  when: dmesg.stdout|int <= 0

- name: Check if grub is present
  ansible.builtin.stat: path=/etc/default/grub
  register: hasgrub

- block:
    - name: Enable IMA in grub
      vars:
        ima_quote: (["']?)                                # group 1
        ima_before: ((?:(?<!ima_tcb ima_hash=)[^"'])*?)\s*    # group 2
        ima_before_simpler: ([^"']*?)\s*                  # group 2
        ima_existing: ((?:ima_tcb ima_hash=[^\s"']+\s*?)*)    # group 3
        ima_after: ((?:(?<!ima_tcb ima_hash=)[^"'])*)         # group 4
        ima_after_simpler: ([^"']*?)                      # group 4
        ima_comments: (\s*#.*|)                           # group 5
        ima_regexp: ^GRUB_CMDLINE_LINUX={{ ima_quote + ima_before_simpler + ima_existing + ima_after }}\1{{ ima_comments }}$
        ima_replace: GRUB_CMDLINE_LINUX=\1\2\4 ima_tcb ima_hash=sha256\1\5
        ima_replace_debug: 2)\2 3)\3 4)\4 5)\5 {{ ima_replace }}
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        regexp: "{{ ima_regexp }}"
        line: "{{ ima_replace }}"
        backrefs: yes
        create: no
        mode: '0644'
        backup: yes
      notify:
        - grub-mkconfig
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        ) and hasgrub.stat.exists

- name: Ensure initramfs-tools is present
  ansible.builtin.package:
    name: initramfs-tools
    state: present
  when: ansible_os_family == 'Debian'

- name: Add IMA policy to initramfs
  ansible.builtin.template:
    src: ima_policy.j2
    dest: /etc/initramfs-tools/scripts/init-top/ima_policy
    mode: '0755'
  notify:
    - update-initramfs
  when: ansible_os_family == 'Debian'

- name: Ensure / mounted with flag iversion
  ansible.posix.mount:
    src: "{{ item.src }}"
    path: "{{ item.path }}"
    fstype: "{{ item.fstype }}"
    opts: "{{ item.opts }}"
    state: "{{ item.state }}"
  loop: "{{ harden_ima_fstab }}"
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )
